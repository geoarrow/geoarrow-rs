{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"geoarrow-rs","text":"<p>The geoarrow-rs repository contains a Rust implementation, Python bindings, and JavaScript (WebAssembly) bindings of the GeoArrow memory specification for efficiently storing geospatial vector geometries, connected to geospatial algorithms implemented by the GeoRust community.</p> <ul> <li> <p> Rust core library</p> <p>Create your own Rust library or application on top of the <code>geoarrow-*</code> Rust crates.</p> <p> Documentation</p> </li> <li> <p> Python bindings</p> <p>Performant, easy-to-use Python bindings to the Rust core.</p> <p> Documentation</p> </li> <li> <p> JavaScript bindings</p> <p>Use GeoArrow from JavaScript in Web applications or in Node.</p> <p> Documentation</p> </li> <li> <p> GeoArrow specification</p> <p>Read the GeoArrow specification.</p> <p> Specification</p> </li> </ul>"},{"location":"#motivation","title":"Motivation","text":"<p>GeoArrow provides a way to share geospatial vector data between programs at no cost and without copies, so that an ecosystem of libraries can share data without serialization overhead. Removing this overhead enables faster code in high-level, interpreted languages such as Python and JavaScript.</p>"},{"location":"rust/","title":"GeoArrow Rust crates","text":"<p>A Rust implementation of the GeoArrow specification.</p>"},{"location":"rust/#crates","title":"Crates","text":"<p>The <code>geoarrow-rs</code> repo is currently undergoing a large refactor from a single crate (<code>geoarrow</code>) to a monorepo of smaller crates, each with a more well-defined scope. As of May 2025, avoid using the <code>geoarrow</code> crate and instead use the newer crates with a smaller scope, like <code>geoarrow-array</code> and <code>geoarrow-schema</code>.</p> Name Description Stability Version Docs <code>geoarrow-array</code> GeoArrow array definitions. Pretty stable <code>geoarrow-cast</code> Functions for converting from one GeoArrow geometry type to another. Pretty stable <code>geoarrow-flatgeobuf</code> Reader and writer for FlatGeobuf files to GeoArrow memory. Somewhat stable <code>geoarrow-schema</code> GeoArrow geometry type and metadata definitions. Pretty stable <code>geoparquet</code> GeoParquet reader and writer. Unstable (a refactor is expected soon)"},{"location":"rust/#versioning","title":"Versioning","text":"<p>These crates may diverge in versioning to allow for some sub-crates to receive breaking changes while not forcing a breaking version change to all crates. However, all crates will receive a new breaking version at least every 3 months, as the upstream <code>arrow-rs</code> crates currently publish a breaking version every 3 months.</p>"}]}